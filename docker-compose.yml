version: "3.8"

services:
  localstack:
    container_name: "localstack"
    image: localstack/localstack
    ports:
      - '4566-4597:4566-4597'
      - "${PORT_WEB_UI-8080}:${PORT_WEB_UI-8080}"
    environment:
      - SERVICES=dynamodb,sqs,sns
      - EDGE_PORT=4566
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  setup:
    image: amazon/aws-cli
    container_name: setup_aws_services
    volumes:
      - ./aws-services:/aws-services
    environment:  
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
    depends_on:
      - localstack
    entrypoint: [""]
    command: ["/aws-services/setup.sh"]
  webapi:
    container_name: webapi
    image: ${DOCKER_REGISTRY}webapi
    build:
      context: ./src/webapi
      dockerfile: Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_URL: http://localhost:4566
    ports: 
      - "5000:80"
    depends_on: 
      - setup
      - localstack
  worker_a:
    container_name: worker_a
    image: ${DOCKER_REGISTRY}worker_a
    build:
      context: ./src/workerA
      dockerfile: Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
    depends_on: 
      - webapi
  worker_b:
    container_name: worker_b
    image: ${DOCKER_REGISTRY}worker_b
    build:
      context: ./src/workerB
      dockerfile: Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_DEFAULT_REGION: us-east-1
    depends_on: 
      - webapi